// ListExcursion(Appear).txt

Title.text = "–°–ø–∏—Å–æ–∫ –º–∞—Ä—à—Ä—É—Ç–æ–≤"

countExcursion = CountElementsOfArray(^ArrayExcursion)

// –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü—É

Struct TableMyExcursion { NameExcursion }
n = 0
cycle i = 0 ; i < countExcursion
{
    strRecord = ^ArrayExcursion[i]
    if strRecord == ""
    {
        continue
    }
    arrayProperty = Components(strRecord, "üìç")
    nameExcursion = arrayProperty[3]
    if nameExcursion == ""
    {
        continue
    }
    TableMyExcursion.NameExcursion = nameExcursion
    ListExcursion[n] = TableMyExcursion
    n++
}
